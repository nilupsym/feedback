{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","style","feedback","map","option","li","btn","type","id","onClick","Section","title","children","App","state","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0LAWeA,EARM,SAAC,GAAD,EAAGC,QAAH,OACjB,mDCyBWC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,mCACW,IAAVD,EAAe,cAAC,EAAD,CAAcL,QAAQ,sBAErC,qCACG,4CACA,uCAAUE,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,a,gBCOGC,EAlBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACpB,oBAAIC,UAAWC,IAAMC,SAArB,SACKJ,EAAQK,KAAI,SAAAC,GACT,OACI,oBAAiBJ,UAAWC,IAAMI,GAAlC,SACI,wBAAQL,UAAWC,IAAMK,IAAKC,KAAK,SAASC,GAAIJ,EAAQK,QAASV,EAAjE,SACKK,KAFAA,SCOVM,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,qCACI,6BAAMD,IACJC,MC8BKC,E,4MA7BXC,MAAQ,CACJtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTK,gBAAkB,SAACgB,GAAO,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAEG,OAAOV,GAAKS,EAAUF,EAAEG,OAAOV,IAAM,O,EAEhGW,mBAAqB,kBAAM,EAAKL,MAAMtB,KAAO,EAAKsB,MAAMrB,QAAU,EAAKqB,MAAMpB,K,EAE7E0B,gCAAkC,kBAAMC,KAAKC,MAAyB,IAAlB,EAAKR,MAAMtB,KAAc,EAAK2B,uB,4CAGlF,WAAU,IAAD,EAC0BI,KAAKT,MAA5BtB,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IACvB,OACI,eAAC,EAAD,CAASiB,MAAM,wBAAf,UACI,cAAC,EAAD,CACIb,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBwB,KAAKxB,kBAC1B,cAAC,EAAD,CACIP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKJ,qBACZvB,mBAAoB2B,KAAKH,2C,GA1B3BI,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,SAAW,kCAAkC,GAAK,4BAA4B,IAAM,gC","file":"static/js/main.90182efe.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>No feedback given</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n        {total === 0 ? (<Notification message=\"No feedback given\"></Notification>)\r\n        :\r\n        (<>\r\n            <h2>Statistics</h2>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n        </>)}\r\n    </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n    <ul className={style.feedback}>\r\n        {options.map(option => {\r\n            return (\r\n                <li key={option} className={style.li}>\r\n                    <button className={style.btn} type='button' id={option} onClick={onLeaveFeedback}>\r\n                        {option}\r\n                    </button>\r\n                </li>)\r\n        })}\r\n    </ul>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <>\r\n        <h2>{ title }</h2>\r\n        { children }\r\n    </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\n\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Section from './Section';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    onLeaveFeedback = (e) => {this.setState(prevState => ({ [e.target.id]: prevState[e.target.id] + 1, }))}\r\n\r\n    countTotalFeedback = () => this.state.good + this.state.neutral + this.state.bad;\r\n\r\n    countPositiveFeedbackPercentage = () => Math.round((this.state.good * 100) / this.countTotalFeedback());\r\n    \r\n    \r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        return (\r\n            <Section title='Please leave feedback'>\r\n                <FeedbackOptions\r\n                    options={['good', 'neutral', 'bad']}\r\n                    onLeaveFeedback={this.onLeaveFeedback} />\r\n                <Statistics\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={this.countTotalFeedback()}\r\n                    positivePercentage={this.countPositiveFeedbackPercentage()} />\r\n            </Section>    \r\n    )}\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__1QlMz\",\"li\":\"FeedbackOptions_li__d8R6M\",\"btn\":\"FeedbackOptions_btn__16Twt\"};"],"sourceRoot":""}