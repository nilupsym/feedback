{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","style","feedback","map","option","li","type","id","onClick","Section","title","children","App","state","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0LAWeA,EARM,SAAC,GAAD,EAAGC,QAAH,OACjB,mDCyBWC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,mCACW,IAAVD,EAAe,cAAC,EAAD,CAAcL,QAAQ,sBAErC,qCACG,4CACA,uCAAUE,KACV,yCAAYC,KACZ,qCAAQC,KACR,wCAAWC,KACX,oDAAuBC,EAAvB,a,gBCEGC,EAbS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACpB,oBAAIC,UAAWC,IAAMC,SAArB,SACKJ,EAAQK,KAAI,SAAAC,GACT,OAAQ,oBAAiBJ,UAAWC,IAAMI,GAAlC,SAAsC,wBAAQC,KAAK,SAASC,GAAIH,EAAQI,QAAST,EAA3C,SAA6DK,KAA1FA,SCQdK,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,qCACI,6BAAMD,IACJC,MC4BKC,E,4MA3BXC,MAAQ,CACJrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTK,gBAAkB,SAACe,GAAO,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAEG,OAAOV,GAAKS,EAAUF,EAAEG,OAAOV,IAAM,O,EAEhGW,mBAAqB,kBAAM,EAAKL,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,K,EAE7EyB,gCAAkC,kBAAMC,KAAKC,MAAyB,IAAlB,EAAKR,MAAMrB,KAAc,EAAK0B,uB,4CAGlF,WACI,OAAQ,eAAC,EAAD,CAASR,MAAM,wBAAf,UACD,cAAC,EAAD,CACCZ,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBuB,KAAKvB,kBACtB,cAAC,EAAD,CACIP,KAAM8B,KAAKT,MAAMrB,KACjBC,QAAS6B,KAAKT,MAAMpB,QACpBC,IAAK4B,KAAKT,MAAMnB,IAChBC,MAAO2B,KAAKJ,qBACZtB,mBAAoB0B,KAAKH,2C,GAxB3BI,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,SAAW,kCAAkC,GAAK,+B","file":"static/js/main.9481447d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>No feedback given</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n        {total === 0 ? (<Notification message=\"No feedback given\"></Notification>)\r\n        :\r\n        (<>\r\n            <h2>Statistics</h2>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral:{neutral}</p>\r\n            <p>Bad:{bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n        </>)}\r\n    </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n    <ul className={style.feedback}>\r\n        {options.map(option => {\r\n            return (<li key={option} className={style.li}><button type='button' id={option} onClick={onLeaveFeedback}>{option}</button></li>)\r\n        })}\r\n    </ul>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <>\r\n        <h2>{ title }</h2>\r\n        { children }\r\n    </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\n\r\nimport Statistics from './Statistics/Statistics';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Section from './Section/Section';\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    onLeaveFeedback = (e) => {this.setState(prevState => ({ [e.target.id]: prevState[e.target.id] + 1, }))}\r\n\r\n    countTotalFeedback = () => this.state.good + this.state.neutral + this.state.bad;\r\n\r\n    countPositiveFeedbackPercentage = () => Math.round((this.state.good * 100) / this.countTotalFeedback());\r\n    \r\n    \r\n    render() {\r\n        return (<Section title='Please leave feedback'>\r\n               <FeedbackOptions\r\n                options={['good', 'neutral', 'bad']}\r\n                onLeaveFeedback={this.onLeaveFeedback} />\r\n                <Statistics\r\n                    good={this.state.good}\r\n                    neutral={this.state.neutral}\r\n                    bad={this.state.bad}\r\n                    total={this.countTotalFeedback()}\r\n                    positivePercentage={this.countPositiveFeedbackPercentage()} />\r\n        </Section>    \r\n    )}\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__18k-d\",\"li\":\"FeedbackOptions_li__NSmLm\"};"],"sourceRoot":""}